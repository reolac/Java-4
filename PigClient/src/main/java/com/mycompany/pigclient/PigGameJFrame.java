package com.mycompany.pigclient;

import com.mycompany.icp_2151_lab_5.PigService;
import com.mycompany.icp_2151_lab_5.PigService_Service;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.ws.BindingProvider;

/**
 *
 * @author Michael
 * @author Huw
 */
public class PigGameJFrame extends javax.swing.JFrame {

    private PigService_Service pigService;
    private PigService pigProxy;

    /**
     * Creates new form PigGameJFrame
     */
    public PigGameJFrame() {

        initComponents();
        displayLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice2.png")));

        try {
            pigService = new PigService_Service();
            pigProxy = pigService.getPigServicePort();

            newGame();

            ((BindingProvider) pigProxy).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY, true);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        myScore = new javax.swing.JTextField();
        serverScore = new javax.swing.JTextField();
        playButton = new javax.swing.JButton();
        passButton = new javax.swing.JButton();
        rollText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("My Score");

        jLabel2.setText("Server Score");

        myScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myScoreActionPerformed(evt);
            }
        });

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        passButton.setText("Pass");
        passButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(rollText, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(myScore, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serverScore, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playButton)
                        .addGap(57, 57, 57)
                        .addComponent(passButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rollText, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(myScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serverScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playButton)
                    .addComponent(passButton))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myScoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myScoreActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:  

        playerTime();
        if (Integer.parseInt(pigProxy.getPlayerScore()) >= 100) {
            playerWins();
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void passButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passButtonActionPerformed
        // TODO add your handling code here:
        pigProxy.savePlayerScore();
        pigProxy.resetPlayerAllocation();
        serverTime();
    }//GEN-LAST:event_passButtonActionPerformed

    /**
     * Runs the GUI
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PigGameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PigGameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PigGameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PigGameJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PigGameJFrame().setVisible(true);

            }
        });
    }

    /**
     * Player logic if a 1 is rolled it switches to the serverTime()
     */
    public void playerTime() {

        int diceNumber = pigProxy.playerRoll();
        displayLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice" + diceNumber + ".png")));
        rollText.setText("You rolled a " + diceNumber);

        if (diceNumber == 1) {
            JOptionPane.showMessageDialog(null, "You rolled a 1, server's turn", "Server's turn", JOptionPane.PLAIN_MESSAGE);
            pigProxy.resetPlayerAllocation();
            myScore.setText(pigProxy.getPlayerScore());
            serverTime();

        } else {
            myScore.setText(pigProxy.getPlayerScore());
        }
    }

    /**
     * Server logic for when the player passes the server takes its turn
     */
    public void serverTime() {
        playButton.setEnabled(false);
        passButton.setEnabled(false);

        int rolls = pigProxy.serverSteps();

        int diceNumber = 0;

        for (int i = 0; i <= rolls; i++) {
            if (Integer.parseInt(pigProxy.getServerScore()) >= 100) {
                serverWins();
                break;
            }
            diceNumber = pigProxy.serverRoll();
            displayLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dice" + diceNumber + ".png")));
            rollText.setText("Server rolled a " + diceNumber);
            if (diceNumber != 1)
            {
            JOptionPane.showMessageDialog(null, "Server rolled a " + diceNumber, "Roll information", JOptionPane.PLAIN_MESSAGE);
            }
            if (diceNumber == 1) {
                JOptionPane.showMessageDialog(null, "Server rolled a 1, player's turn", "Player's turn", JOptionPane.PLAIN_MESSAGE);
                pigProxy.resetServerAllocation();
                serverScore.setText(pigProxy.getServerScore());
                break;
            } else {

                serverScore.setText(pigProxy.getServerScore());
            }
        }

        if (diceNumber != 1) {
            JOptionPane.showMessageDialog(null, "Server passed, player's turn", "Player's turn", JOptionPane.PLAIN_MESSAGE);
        }
        pigProxy.saveServerScore();
        pigProxy.resetServerAllocation();

        playButton.setEnabled(true);
        passButton.setEnabled(true);
    }

    /**
     *Starts a new game resets all the variables to default;
     */
    public void newGame() {
        pigProxy.resetPlayerAllocation();
        pigProxy.savePlayerScore();
        pigProxy.newGame();
        rollText.setText("");
        myScore.setText(pigProxy.getPlayerScore());
        serverScore.setText(pigProxy.getServerScore());
    }

    /**
     *If the server wins an option is given to play again or quit
     */
    public void serverWins() {
        int frame = JOptionPane.showConfirmDialog(null, "You lose. Do you want to play again?",
                "You lose", JOptionPane.YES_NO_OPTION);
        if (frame == 0) {
            newGame();
        } else {
            System.exit(0);
        }
    }

    /**
     *If the player wins an option is given to play again or quit
     */
    public void playerWins() {
        int frame = JOptionPane.showConfirmDialog(null, "You win. Do you want to play again?",
                "You win", JOptionPane.YES_NO_OPTION);
        if (frame == 0) {
            newGame();
        } else {
            System.exit(0);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel displayLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField myScore;
    private javax.swing.JButton passButton;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel rollText;
    private javax.swing.JTextField serverScore;
    // End of variables declaration//GEN-END:variables
}
